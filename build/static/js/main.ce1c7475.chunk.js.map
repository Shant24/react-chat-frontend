{"version":3,"sources":["components/ConversationsPart/styles.module.scss","components/Conversations/styles.module.scss","components/ImageAttachments/styles.module.scss","components/LoadingMessage/styles.module.scss","components/OnlineStatus/styles.module.scss","components/pages/Auth/styles.module.scss","components/Button/styles.module.scss","components/Dialogues/styles.module.scss","components/pages/Home/styles.module.scss","components/ShadowBlock/styles.module.scss","components/Avatar/styles.module.scss","components/SendMessageInput/styles.module.scss","components/DialogueItem/styles.module.scss","components/Message/styles.module.scss","store/types/messages.ts","hooks/useWindowSize.ts","components/PageLayout/index.tsx","components/Button/index.tsx","components/ShadowBlock/index.tsx","helpers/sortingHelper.ts","store/actions/messagesAction.ts","store/types/dialogues.ts","store/selectors/messagesSelector.ts","store/selectors/dialoguesSelector.ts","components/ConversationsPart/index.tsx","components/Conversations/index.tsx","helpers/dateHelper.ts","components/ImageAttachments/index.tsx","helpers/stringHelper.ts","helpers/colorHelper.ts","components/Avatar/index.tsx","components/Message/index.tsx","components/images/ReadIcon.tsx","components/images/SentIcon.tsx","components/images/AudioWaveIcon.tsx","components/images/PlayIcon.tsx","components/images/PauseIcon.tsx","components/MessageReadStatus/index.tsx","components/Dialogues/index.tsx","store/actions/dialoguesAction.ts","components/DialoguesBar/index.tsx","components/DialogueItem/index.tsx","components/LoadingMessage/index.tsx","helpers/audioHelper.ts","components/AudioMessage/index.tsx","components/OnlineStatus/index.tsx","components/SendMessageInput/index.tsx","utils/constants/index.ts","validations/index.ts","helpers/validateFieldStatusHelper.ts","components/pages/Auth/components/LoginForm/index.tsx","components/pages/Auth/components/RegisterForm/index.tsx","components/pages/Auth/components/Success/index.tsx","components/pages/Auth/index.tsx","components/pages/Home/index.tsx","App.tsx","history/index.ts","store/reducers/dialoguesReducer.ts","store/reducers/messagesReducer.ts","store/reducers/index.ts","utils/StorageManager/index.ts","utils/AccessToken/index.ts","axios/index.ts","utils/api/dialoguesApi.ts","store/sagas/dialoguesSaga.ts","utils/api/messagesApi.ts","store/sagas/messagesSaga.ts","store/sagas/index.ts","store/index.ts","index.tsx","components/DialoguesBar/styles.module.scss","components/AudioMessage/styles.module.scss"],"names":["module","exports","IMessagesActionTypes","useWindowSize","useState","width","height","windowSize","setWindowSize","useEffect","handler","window","innerWidth","innerHeight","addEventListener","removeEventListener","PageLayout","children","style","maxWidth","maxHeight","Button","className","size","restProps","cls","styles","button","large","memo","ShadowBlock","container","sortObject","object","condition","isShowNewest","sorted","sortBy","reverse","filterObject","filter","IDialoguesActionTypes","setIsLoadingMessages","isLoading","type","MESSAGES_SET_IS_LOADING","payload","removeMessages","REMOVE_MESSAGES","messagesDataSelector","key","state","messagesData","getAllMessagesSelector","createSelector","messages","isLoadingMessagesSelector","dialoguesDataSelector","dialoguesData","dialoguesSelector","dialogues","getDialoguesSelector","isLoadingDialoguesSelector","ConversationsPart","dispatch","useDispatch","id","useParams","useSelector","dialogueRoom","roomId","find","dialog","_id","getDialogueById","dialoguesId","MESSAGES_REQUEST","sortedMessages","message","date","conversationsContainer","conversationsHeader","conversationWith","name","fullName","isOnline","showIcon","conversationOptions","EllipsisOutlined","items","Conversations","ScrollbarsRef","useRef","current","scrollToBottom","conversationsList","ref","conversationsWrapper","autoHide","messagesWrapper","messagesStatusContainer","tip","length","map","description","localeArr","us","enUS","ru","hy","formatDateDistance","preDate","isShowTime","locale","Date","isThisMonth","getDate","getTime","formattedDate","formatDistanceToNowStrict","addSuffix","roundingMethod","isThisHour","isToday","format","isShowSeconds","ImageAttachments","attachments","isMe","isBigImage","attachmentsContainer","url","filename","attachmentWrapper","big","src","alt","title","getUpperLetter","string","Array","from","l1","l2","toUpperCase","generateNameForAvatar","split","surname","n1","n2","s1","generateAvatarGradientFromFullName","color","colorLighten","generateGradient","ColorHash","saturation","hex","lightness","getColorSpectrumFromString","Avatar","avatar","textAvatar","background","Message","props","user","text","audio","isRead","isTyping","isAudio","avatarWrapper","messageContent","bubbleWrapper","bubble","readContainer","withAttachment","ReadIcon","xmlns","fill","viewBox","fillRule","d","clipRule","SentIcon","AudioWaveIcon","PlayIcon","PauseIcon","version","xmlSpace","MessageReadStatus","unreadCount","Dialogues","isShowUnReads","scrollToTop","dialoguesList","loadingContainer","item","image","Empty","PRESENTED_IMAGE_SIMPLE","setIsLoadingDialogues","DIALOGUES_SET_IS_LOADING","DialoguesBar","searchValue","setSearchValue","hasUnread","setHasUnread","setIsShowUnReads","DIALOGUES_REQUEST","filteredDialogues","useMemo","sortedDialogues","unread","created_at","toLocaleLowerCase","indexOf","forEach","dialoguesBarContainer","dialoguesBarTopPart","dialoguesHeader","conversationsListText","TeamOutlined","listIcon","shape","createNewConversationBtn","icon","FormOutlined","createNewConversationIcon","onClick","noop","dialoguesSearchContainer","searchInput","value","placeholder","allowClear","prefix","SearchOutlined","searchIcon","onChange","e","target","filterBtnContainer","dot","placement","filterBtnWrapper","UnorderedListOutlined","DialogueItem","to","dialogItemContainer","activeClassName","active","userAvatarWrapper","userAvatar","online","dialogContent","topPart","userName","sentTime","bottomPart","messageText","readIcon","unreadMore","LoadingMessage","typingAnimationContainer","one","two","three","addZero","time","slice","getProgress","duration","currentTime","getTimeDuration","expectedDuration","formatDuration","interval","start","end","intervalToDuration","hours","minutes","seconds","minSec","AudioMessage","AudioRef","isPlaying","setIsPlaying","setDuration","setCurrentTime","handleInitAudioData","handleTimeUpdate","handlePause","useCallback","pause","audioCurrent","audioContainer","play","handlePlay","preload","audioProgress","audioInfo","me","audioBtn","playing","paused","progressIcon","audioDuration","OnlineStatus","onlineStatusContainer","offline","statusName","SendMessageInput","isMount","setIsMount","textValue","setTextValue","setFiles","TextareaRef","handleEmojiClick","handleAudioClick","sendMessageInputContainer","actionsContainer","leftSide","btn","emojiBtn","SmileOutlined","emojiIcon","textarea","autoSize","minRows","maxRows","scrollTo","scrollHeight","onPressEnter","isMobile","shiftKey","preventDefault","spellCheck","rightSide","multiple","accept","maxLength","console","log","onStart","file","beforeUpload","fileList","photoBtn","CameraOutlined","photoIcon","conditionContainer","sendBtn","conditionalIcons","show","SendOutlined","sendIcon","focus","AudioOutlined","audioIcon","REGEXP","LoginSchema","yup","username","trim","min","max","matches","required","password","RegisterSchema","email","confirmPassword","oneOf","validateFieldStatusHelper","values","errors","touched","fieldName","LoginForm","history","formik","useFormik","initialValues","onSubmit","push","validationSchema","validateOnMount","isValid","dirty","handleSubmit","handleChange","handleBlur","authSectionContainer","titleContainer","block","onFinish","requiredMark","Item","fieldWrapper","hasFeedback","help","validateStatus","inputContainer","onBlur","UserOutlined","inputIcon","Password","passwordField","LockOutlined","submitBtn","htmlType","disabled","suggestLink","RegisterForm","remember","MailOutlined","autoComplete","RegisterSuccess","successContainer","InfoCircleTwoTone","infoIcon","Auth","authContainer","path","exact","component","Success","Home","homePage","App","createBrowserHistory","initialState","dialoguesReducer","action","SET_DIALOGUES","messagesReducer","SET_MESSAGES","rootReducers","combineReducers","StorageManager","setItem","data","serializedState","JSON","stringify","localStorage","getItem","parse","err","removeItem","getAccessToken","api","axios","create","baseURL","process","headers","Authorization","dialoguesApi","getAll","get","getAllDialogues","dialoguesSagaWatcher","put","call","takeLatest","messagesApi","getAllByDialogueId","dialogueId","getAllMessagesByDialogueId","messagesSagaWatcher","rootSagas","all","sagaMiddleware","createSagaMiddleware","middlewaresArr","middlewares","applyMiddleware","store","createStore","run","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ce1c7475.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"conversationsContainer\":\"styles_conversationsContainer__33qWv\",\"conversationsHeader\":\"styles_conversationsHeader__3WjCP\",\"conversationWith\":\"styles_conversationWith__2cca5\",\"name\":\"styles_name__3Gs3h\",\"conversationOptions\":\"styles_conversationOptions__32cbT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"conversationsList\":\"styles_conversationsList__2_ZaV\",\"conversationsWrapper\":\"styles_conversationsWrapper__3wGnJ\",\"messagesWrapper\":\"styles_messagesWrapper__3MowQ\",\"messagesStatusContainer\":\"styles_messagesStatusContainer__1nL-O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"attachmentsContainer\":\"styles_attachmentsContainer__2WHDy\",\"attachmentWrapper\":\"styles_attachmentWrapper__3YZgx\",\"isMe\":\"styles_isMe__1NOKI\",\"isBigImage\":\"styles_isBigImage__1WO5w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"typingAnimationContainer\":\"styles_typingAnimationContainer__Psb6H\",\"typingAnimation\":\"styles_typingAnimation__3xcNJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"onlineStatusContainer\":\"styles_onlineStatusContainer__1B1fI\",\"online\":\"styles_online__WcEI2\",\"offline\":\"styles_offline__3dD1s\",\"statusName\":\"styles_statusName__19P26\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"authContainer\":\"styles_authContainer__1ITGu\",\"authSectionContainer\":\"styles_authSectionContainer__2FCCL\",\"titleContainer\":\"styles_titleContainer__1XZzZ\",\"block\":\"styles_block__1fqgq\",\"fieldWrapper\":\"styles_fieldWrapper__3Ixlz\",\"inputIcon\":\"styles_inputIcon__1ttdH\",\"inputContainer\":\"styles_inputContainer__Dvgsv\",\"passwordField\":\"styles_passwordField__3xRV_\",\"submitBtn\":\"styles_submitBtn__2cEXQ\",\"suggestLink\":\"styles_suggestLink__1wgdd\",\"successContainer\":\"styles_successContainer__2jnrr\",\"infoIcon\":\"styles_infoIcon__LGjIs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"styles_button__26yxq\",\"large\":\"styles_large__3jU_o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialoguesList\":\"styles_dialoguesList__3XXai\",\"loadingContainer\":\"styles_loadingContainer__21zfC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"homePage\":\"styles_homePage__3TyOF\",\"container\":\"styles_container__IKGVF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__9CaTl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textAvatar\":\"styles_textAvatar__-mnm_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sendMessageInputContainer\":\"styles_sendMessageInputContainer__9F53t\",\"textarea\":\"styles_textarea__1A5qK\",\"actionsContainer\":\"styles_actionsContainer__1z0cC\",\"leftSide\":\"styles_leftSide__26y9z\",\"rightSide\":\"styles_rightSide__2ZLnw\",\"conditionContainer\":\"styles_conditionContainer__3baz2\",\"btn\":\"styles_btn__2-Z39\",\"sendBtn\":\"styles_sendBtn__3j7V5\",\"audioBtn\":\"styles_audioBtn__3CAu9\",\"conditionalIcons\":\"styles_conditionalIcons__2TlwT\",\"show\":\"styles_show__j1DcM\",\"photoBtn\":\"styles_photoBtn__2o3Mo\",\"icon\":\"styles_icon__3sQvH\",\"sendIcon\":\"styles_sendIcon__CwXW1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogItemContainer\":\"styles_dialogItemContainer__2-CGz\",\"active\":\"styles_active__2bMwP\",\"userAvatarWrapper\":\"styles_userAvatarWrapper__23yyP\",\"online\":\"styles_online__1bIWX\",\"userAvatar\":\"styles_userAvatar__3fbov\",\"dialogContent\":\"styles_dialogContent__3iize\",\"topPart\":\"styles_topPart__8pc-Q\",\"userName\":\"styles_userName__7_249\",\"sentTime\":\"styles_sentTime__1G2Yv\",\"bottomPart\":\"styles_bottomPart__3Wlon\",\"messageText\":\"styles_messageText__2alVR\",\"readIcon\":\"styles_readIcon__1xVnk\",\"unread\":\"styles_unread__11ilm\",\"unreadMore\":\"styles_unreadMore__3bm2J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"styles_message__1FkBI\",\"avatarWrapper\":\"styles_avatarWrapper__3WwQS\",\"messageContent\":\"styles_messageContent__1pMeV\",\"bubbleWrapper\":\"styles_bubbleWrapper__3-tA6\",\"bubble\":\"styles_bubble__2brML\",\"text\":\"styles_text__3JrKy\",\"date\":\"styles_date__O0Tb_\",\"readContainer\":\"styles_readContainer__30Z98\",\"withAttachment\":\"styles_withAttachment__1-qlK\",\"isMe\":\"styles_isMe__2Zf8s\",\"isTyping\":\"styles_isTyping__9-4Bk\",\"isAudio\":\"styles_isAudio__u6_Dy\"};","import { IMessage } from '../../types/message';\r\n\r\nexport interface IMessagesState {\r\n  isLoading: boolean;\r\n  messages: IMessage[];\r\n}\r\n\r\nexport enum IMessagesActionTypes {\r\n  MESSAGES_SET_IS_LOADING = 'MESSAGES_SET_IS_LOADING',\r\n  MESSAGES_REQUEST = 'MESSAGES_REQUEST',\r\n  MESSAGES_REQUEST_ERROR = 'MESSAGES_REQUEST_ERROR',\r\n  SET_MESSAGES = 'SET_MESSAGES',\r\n  REMOVE_MESSAGES = 'REMOVE_MESSAGES',\r\n}\r\n\r\ninterface IMessagesSetIsLoadingAction {\r\n  type: IMessagesActionTypes.MESSAGES_SET_IS_LOADING;\r\n  payload: boolean;\r\n}\r\n\r\nexport interface IGetMessagesAction {\r\n  type: IMessagesActionTypes.MESSAGES_REQUEST;\r\n  payload: string;\r\n}\r\n\r\ninterface ISetDialoguesAction {\r\n  type: IMessagesActionTypes.SET_MESSAGES;\r\n  payload: IMessage[];\r\n}\r\n\r\ninterface IRemoveDialoguesAction {\r\n  type: IMessagesActionTypes.REMOVE_MESSAGES;\r\n}\r\n\r\nexport type IMessagesActions =\r\n  | IMessagesSetIsLoadingAction\r\n  | IGetMessagesAction\r\n  | ISetDialoguesAction\r\n  | IRemoveDialoguesAction;\r\n","import { useEffect, useState } from 'react';\r\n\r\ninterface WindowSize {\r\n  width: number;\r\n  height: number;\r\n}\r\n\r\nconst useWindowSize = (): WindowSize => {\r\n  const [windowSize, setWindowSize] = useState<WindowSize>({\r\n    width: 0,\r\n    height: 0,\r\n  });\r\n\r\n  useEffect(() => {\r\n    const handler = () => {\r\n      setWindowSize({ width: window.innerWidth, height: window.innerHeight });\r\n    };\r\n\r\n    handler();\r\n    window.addEventListener('resize', handler);\r\n    return () => {\r\n      window.removeEventListener('resize', handler);\r\n    };\r\n  }, []);\r\n\r\n  return windowSize;\r\n};\r\n\r\nexport default useWindowSize;\r\n","import React, { FC } from 'react';\r\n\r\nimport useWindowSize from '../../hooks/useWindowSize';\r\n\r\nconst PageLayout: FC = ({ children }) => {\r\n  const { width, height } = useWindowSize();\r\n\r\n  return <div style={{ maxWidth: width, width, maxHeight: height, height }}>{children}</div>;\r\n};\r\n\r\nexport default PageLayout;\r\n","import React, { FC, memo } from 'react';\r\n\r\nimport cls from 'classnames';\r\nimport { Button as BaseButton } from 'antd';\r\n\r\nimport styles from './styles.module.scss';\r\n\r\ninterface IButtonProps {\r\n  [props: string]: any;\r\n}\r\n\r\nconst Button: FC<IButtonProps> = ({ children, className, size, ...restProps }) => (\r\n  <BaseButton\r\n    {...restProps}\r\n    className={cls(styles.button, { [styles.large]: size === 'large', [className]: className })}\r\n  >\r\n    {children}\r\n  </BaseButton>\r\n);\r\n\r\nexport default memo(Button);\r\n","import React, { FC, memo, ReactElement } from 'react';\r\n\r\nimport cls from 'classnames';\r\n\r\nimport styles from './styles.module.scss';\r\n\r\ninterface ShadowBlockProps {\r\n  children: ReactElement;\r\n  className?: string;\r\n}\r\n\r\nconst ShadowBlock: FC<ShadowBlockProps> = ({ children, className = '' }) => (\r\n  <div className={cls(styles.container, { [className]: className })}>{children}</div>\r\n);\r\n\r\nexport default memo(ShadowBlock);\r\n","import sortBy from 'lodash/sortBy';\r\nimport filter from 'lodash/filter';\r\n\r\ntype ConditionType = (object: any) => any;\r\n\r\nexport const sortObject = (object: object, condition: ConditionType[], isShowNewest: boolean = false) => {\r\n  const sorted = sortBy(object, condition);\r\n  return isShowNewest ? sorted.reverse() : sorted;\r\n};\r\n\r\nexport const filterObject = (object: object, condition: ConditionType) => filter(object, condition);\r\n","import { IMessage } from '../../types/message';\r\nimport { IMessagesActionTypes } from '../types/messages';\r\n\r\nexport const setIsLoadingMessages = (isLoading: Required<boolean>) => ({\r\n  type: IMessagesActionTypes.MESSAGES_SET_IS_LOADING,\r\n  payload: isLoading,\r\n});\r\n\r\nexport const fetchMessages = (dialoguesId: Required<string>) => ({\r\n  type: IMessagesActionTypes.MESSAGES_REQUEST,\r\n  payload: dialoguesId,\r\n});\r\n\r\nexport const setMessages = (messages: Required<IMessage[]>) => ({\r\n  type: IMessagesActionTypes.SET_MESSAGES,\r\n  payload: messages,\r\n});\r\n\r\nexport const removeMessages = () => ({\r\n  type: IMessagesActionTypes.REMOVE_MESSAGES,\r\n});\r\n","import { IDialog } from '../../types/dialog';\r\n\r\nexport interface IDialoguesState {\r\n  isLoading: boolean;\r\n  dialogues: IDialog[];\r\n}\r\n\r\nexport enum IDialoguesActionTypes {\r\n  DIALOGUES_SET_IS_LOADING = 'DIALOGUES_SET_IS_LOADING',\r\n  DIALOGUES_REQUEST = 'DIALOGUES_REQUEST',\r\n  DIALOGUES_REQUEST_ERROR = 'DIALOGUES_REQUEST_ERROR',\r\n  SET_DIALOGUES = 'SET_DIALOGUES',\r\n}\r\n\r\nexport interface IDialoguesSetIsLoadingAction {\r\n  type: IDialoguesActionTypes.DIALOGUES_SET_IS_LOADING;\r\n  payload: boolean;\r\n}\r\n\r\nexport interface IGetAllDialoguesAction {\r\n  type: IDialoguesActionTypes.DIALOGUES_REQUEST;\r\n}\r\n\r\nexport interface ISetDialoguesAction {\r\n  type: IDialoguesActionTypes.SET_DIALOGUES;\r\n  payload: IDialog[];\r\n}\r\n\r\nexport type IDialoguesActions = IDialoguesSetIsLoadingAction | IGetAllDialoguesAction | ISetDialoguesAction;\r\n","import { createSelector } from 'reselect';\r\n\r\nimport { RootState } from '..';\r\nimport { IMessagesState } from '../types/messages';\r\n\r\nconst messagesDataSelector = (key: string) => (state: RootState) => (state.messagesData as any)[key];\r\nconst messagesSelector = (state: RootState) => (state.messagesData as IMessagesState).messages;\r\n\r\nexport const getAllMessagesSelector = createSelector(messagesSelector, (messages) => messages);\r\n\r\nexport const isLoadingMessagesSelector = createSelector(\r\n  messagesDataSelector('isLoading'),\r\n  (isLoading): boolean => isLoading,\r\n);\r\n\r\nexport default messagesDataSelector;\r\n","import { createSelector } from 'reselect';\r\n\r\nimport { RootState } from '..';\r\nimport { IDialoguesState } from '../types/dialogues';\r\n\r\nconst dialoguesDataSelector = (key: string) => (state: RootState) => (state.dialoguesData as any)[key];\r\nconst dialoguesSelector = (state: RootState) => (state.dialoguesData as IDialoguesState).dialogues;\r\n\r\nexport const getDialoguesSelector = createSelector(dialoguesSelector, (dialogues) => dialogues);\r\n\r\nexport const getDialogueById = (roomId: string = '') =>\r\n  createSelector(dialoguesSelector, (dialogues) => dialogues.find((dialog) => dialog._id === roomId) || null);\r\n\r\nexport const isLoadingDialoguesSelector = createSelector(\r\n  dialoguesDataSelector('isLoading'),\r\n  (isLoading): boolean => isLoading,\r\n);\r\n\r\nexport default dialoguesDataSelector;\r\n","import React, { useEffect } from 'react';\r\n\r\nimport { useParams } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { EllipsisOutlined } from '@ant-design/icons';\r\n\r\nimport styles from './styles.module.scss';\r\nimport { IMessage } from '../../types/message';\r\nimport { Conversations, OnlineStatus, SendMessageInput } from '..';\r\nimport { sortObject } from '../../helpers/sortingHelper';\r\nimport { fetchMessages, removeMessages } from '../../store/actions/messagesAction';\r\nimport { getAllMessagesSelector } from '../../store/selectors/messagesSelector';\r\nimport { getDialogueById } from '../../store/selectors/dialoguesSelector';\r\n\r\nconst ConversationsPart = () => {\r\n  const dispatch = useDispatch();\r\n  const { id }: { id?: string } = useParams();\r\n\r\n  const messages = useSelector(getAllMessagesSelector);\r\n  const dialogueRoom = useSelector(getDialogueById(id));\r\n\r\n  useEffect(() => {\r\n    if (id) {\r\n      dispatch(removeMessages());\r\n      dispatch(fetchMessages(id));\r\n    } else {\r\n      dispatch(removeMessages());\r\n    }\r\n  }, [dispatch, id]);\r\n\r\n  const sortedMessages: IMessage[] = sortObject(messages, [(message: IMessage) => message.date], false);\r\n\r\n  return (\r\n    <div className={styles.conversationsContainer}>\r\n      <div className={styles.conversationsHeader}>\r\n        {dialogueRoom && (\r\n          <div className={styles.conversationWith}>\r\n            <div className={styles.name}>{dialogueRoom.fullName}</div>\r\n\r\n            <OnlineStatus isOnline={dialogueRoom.isOnline} showIcon />\r\n          </div>\r\n        )}\r\n\r\n        <div className={styles.conversationOptions}>\r\n          <EllipsisOutlined />\r\n        </div>\r\n      </div>\r\n\r\n      <Conversations items={sortedMessages} roomId={id} />\r\n\r\n      {dialogueRoom && <SendMessageInput />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ConversationsPart;\r\n","import React, { memo, RefObject, useEffect, useRef } from 'react';\r\n\r\nimport { useSelector } from 'react-redux';\r\nimport Scrollbars from 'react-custom-scrollbars-2';\r\nimport { Empty, Spin } from 'antd';\r\n\r\nimport styles from './styles.module.scss';\r\nimport { IMessage } from '../../types/message';\r\nimport { Message } from '..';\r\nimport { isLoadingMessagesSelector } from '../../store/selectors/messagesSelector';\r\n\r\ninterface IConversationsProps {\r\n  items: IMessage[];\r\n  roomId?: string;\r\n}\r\n\r\nconst Conversations = ({ items, roomId }: IConversationsProps) => {\r\n  const ScrollbarsRef = useRef(null) as RefObject<Scrollbars> | null;\r\n  const isLoading = useSelector(isLoadingMessagesSelector);\r\n\r\n  useEffect(() => {\r\n    if (ScrollbarsRef) {\r\n      ScrollbarsRef.current?.scrollToBottom();\r\n    }\r\n  }, [ScrollbarsRef, items]);\r\n\r\n  return (\r\n    <div className={styles.conversationsList}>\r\n      <Scrollbars ref={ScrollbarsRef} className={styles.conversationsWrapper} autoHide>\r\n        <div className={styles.messagesWrapper}>\r\n          {isLoading ? (\r\n            <Spin className={styles.messagesStatusContainer} size=\"large\" tip=\"Loading messages\" />\r\n          ) : roomId && !!items.length ? (\r\n            items.map((message) => (\r\n              <Message key={message._id} {...message} /> /* scrollTo={items.length + 1 === index} */\r\n            ))\r\n          ) : (\r\n            <Empty\r\n              className={styles.messagesStatusContainer}\r\n              description={roomId && !items.length ? 'No messages' : 'Open the dialogue'}\r\n            />\r\n          )}\r\n        </div>\r\n      </Scrollbars>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default memo(Conversations);\r\n","import formatDistanceToNowStrict from 'date-fns/formatDistanceToNowStrict';\r\nimport format from 'date-fns/format';\r\nimport isToday from 'date-fns/isToday';\r\nimport isThisMonth from 'date-fns/isThisMonth';\r\nimport isThisHour from 'date-fns/isThisHour';\r\nimport enUS from 'date-fns/locale/en-US';\r\nimport ru from 'date-fns/locale/ru';\r\nimport hy from 'date-fns/locale/hy';\r\n\r\ntype DateType = Date | string | number;\r\ntype LocaleType = 'us' | 'ru' | 'hy';\r\n\r\nconst localeArr = {\r\n  us: enUS,\r\n  ru,\r\n  hy,\r\n};\r\n\r\nexport const formatDateDistance = (preDate: DateType, isShowTime?: boolean, locale: LocaleType = 'us'): string => {\r\n  const date = new Date(preDate);\r\n\r\n  if (isShowTime && !isThisMonth(date)) return `${getDate(date)}, ${getTime(date)}`;\r\n\r\n  const formattedDate = formatDistanceToNowStrict(date, {\r\n    addSuffix: true,\r\n    locale: localeArr[locale],\r\n    roundingMethod: 'floor',\r\n  });\r\n\r\n  if (isShowTime) return `${formattedDate}, ${getTime(date)}`;\r\n  if (isThisHour(date)) return formattedDate;\r\n  if (isToday(date)) return getTime(date, false);\r\n  if (isThisMonth(date)) return formattedDate;\r\n\r\n  return getDate(date);\r\n};\r\n\r\nexport const getDate = (date: DateType) => {\r\n  return format(new Date(date), 'dd.MM.yyyy');\r\n};\r\n\r\nexport const getTime = (date: DateType, isShowSeconds?: boolean) => {\r\n  return format(new Date(date), isShowSeconds ? 'HH:mm:ss' : 'HH:mm');\r\n};\r\n","import React, { memo } from 'react';\r\n\r\nimport cls from 'classnames';\r\n\r\nimport styles from './styles.module.scss';\r\n\r\ninterface IImageAttachmentsProps {\r\n  attachments: { url: string; filename: string }[];\r\n  isMe: boolean;\r\n  isBigImage: boolean;\r\n}\r\n\r\nconst ImageAttachments = ({ attachments, isMe, isBigImage }: IImageAttachmentsProps) => (\r\n  <div className={cls(styles.attachmentsContainer, { [styles.isMe]: isMe, [styles.isBigImage]: isBigImage })}>\r\n    {attachments.map(({ url, filename }) => (\r\n      <div\r\n        key={`${url}-${filename}`}\r\n        className={cls(styles.attachmentWrapper, { [styles.big]: attachments.length === 1 })}\r\n      >\r\n        <img src={url} alt={filename} title={filename} />\r\n      </div>\r\n    ))}\r\n  </div>\r\n);\r\n\r\nexport default memo(ImageAttachments);\r\n","const getUpperLetter = (string: string) => {\r\n  const [l1, l2] = Array.from(string);\r\n  return [l1?.toUpperCase(), l2?.toUpperCase()];\r\n};\r\n\r\nexport const generateNameForAvatar = (fullName: string): string => {\r\n  const [name, surname = ''] = fullName.split(' ');\r\n  const [n1, n2] = getUpperLetter(name);\r\n  const [s1] = getUpperLetter(surname);\r\n\r\n  return `${n1}${s1 || n2}`;\r\n};\r\n","import ColorHash from 'color-hash';\r\n\r\nimport { generateNameForAvatar } from './stringHelper';\r\n\r\nexport const generateGradient = ({ color, colorLighten }: { color: string; colorLighten: string }): string => {\r\n  return `linear-gradient(135deg, ${color} 0%, ${colorLighten} 100%)`;\r\n};\r\n\r\nconst getColorSpectrumFromString = (fullName: string): { color: string; colorLighten: string } => {\r\n  const endPrefix = 'u';\r\n  const name = `${generateNameForAvatar(fullName)}${endPrefix}`;\r\n  const saturation = 1;\r\n  const color = new ColorHash({ saturation }).hex(name);\r\n  const colorLighten = new ColorHash({ saturation, lightness: 0.98 }).hex(name);\r\n  return { color, colorLighten };\r\n};\r\n\r\nexport const generateAvatarGradientFromFullName = (name: string): string => {\r\n  return generateGradient(getColorSpectrumFromString(name));\r\n};\r\n","import React, { memo } from 'react';\r\n\r\nimport cls from 'classnames';\r\n\r\nimport styles from './styles.module.scss';\r\nimport { generateAvatarGradientFromFullName } from '../../helpers/colorHelper';\r\nimport { generateNameForAvatar } from '../../helpers/stringHelper';\r\n\r\ninterface IAvatarProps {\r\n  fullName: string;\r\n  avatar: string;\r\n  className: string;\r\n}\r\n\r\nconst Avatar = ({ fullName, avatar, className }: IAvatarProps) => (\r\n  <div\r\n    className={cls(className, { [styles.textAvatar]: !avatar, textAvatar: !avatar })}\r\n    {...(!avatar ? { style: { background: generateAvatarGradientFromFullName(fullName) } } : {})}\r\n  >\r\n    {avatar ? <img src={avatar} alt={`${fullName} avatar`} /> : <span>{generateNameForAvatar(fullName)}</span>}\r\n  </div>\r\n);\r\n\r\nexport default memo(Avatar);\r\n","import React, { memo } from 'react';\r\n\r\nimport cls from 'classnames';\r\n\r\nimport styles from './styles.module.scss';\r\nimport { IMessage } from '../../types/message';\r\nimport { formatDateDistance } from '../../helpers/dateHelper';\r\nimport { MessageReadStatus, LoadingMessage, AudioMessage } from '..';\r\nimport ImageAttachments from '../ImageAttachments';\r\nimport Avatar from '../Avatar';\r\n\r\ninterface IMessageProps extends IMessage {\r\n  className?: string;\r\n}\r\n\r\nconst Message = (props: IMessageProps) => {\r\n  const {\r\n    className = '',\r\n    user: { fullName },\r\n    text,\r\n    audio,\r\n    avatar,\r\n    date,\r\n    attachments,\r\n    isMe,\r\n    isRead,\r\n    isTyping,\r\n  } = props;\r\n\r\n  if (!text && !attachments && !isTyping && !audio) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={cls(styles.message, className, {\r\n        [styles.isMe]: isMe,\r\n        [styles.isAudio]: audio,\r\n        [styles.isTyping]: isTyping,\r\n      })}\r\n    >\r\n      <Avatar fullName={fullName} avatar={avatar} className={styles.avatarWrapper} />\r\n\r\n      <div className={styles.messageContent}>\r\n        <div className={styles.bubbleWrapper}>\r\n          {(text || isTyping || audio) && (\r\n            <div className={styles.bubble}>\r\n              {!isTyping && text && !audio && <p className={styles.text}>{text}</p>}\r\n\r\n              {!isTyping && audio && <AudioMessage isMe={isMe} audio={audio} />}\r\n\r\n              {isTyping && <LoadingMessage />}\r\n            </div>\r\n          )}\r\n\r\n          {!isTyping && isMe && !attachments && (\r\n            <MessageReadStatus isMe={isMe} isRead={isRead} className={styles.readContainer} />\r\n          )}\r\n        </div>\r\n\r\n        {!isTyping && attachments && (\r\n          <ImageAttachments attachments={attachments} isBigImage={attachments?.length === 1} isMe={isMe} />\r\n        )}\r\n\r\n        {date && <time className={styles.date}>{formatDateDistance(date, true)}</time>}\r\n      </div>\r\n\r\n      {!isTyping && isMe && attachments && (\r\n        <MessageReadStatus isMe={isMe} isRead={isRead} className={cls(styles.readContainer, styles.withAttachment)} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default memo(Message);\r\n","import React, { memo } from 'react';\r\n\r\nconst ReadIcon = () => (\r\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"9\" fill=\"none\" viewBox=\"0 0 15 9\">\r\n    <path\r\n      fill=\"#0C8FE4\"\r\n      fillRule=\"evenodd\"\r\n      d=\"M3.666 6.875L10.21.139a.454.454 0 01.654 0c.181.185.181.486 0 .671L3.995 7.88a.458.458 0 01-.654 0L.135 4.608a.484.484 0 010-.671.454.454 0 01.654 0l2.877 2.939zm3.475.192L14.155.14a.508.508 0 01.7 0 .464.464 0 010 .674L7.559 8.14c-.191.184-1.687-.572-1.804-.676-.113-.1.546-.688.546-.688.205.1.786.345.84.292z\"\r\n      clipRule=\"evenodd\"\r\n    />\r\n  </svg>\r\n);\r\n\r\nexport default memo(ReadIcon);\r\n","import React, { memo } from 'react';\r\n\r\nconst SentIcon = () => (\r\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"11\" height=\"9\" fill=\"none\" viewBox=\"0 0 11 9\">\r\n    <path\r\n      fill=\"#0C8FE4\"\r\n      fillRule=\"evenodd\"\r\n      d=\"M10.21.156l-6.544 7.56L.79 4.419a.42.42 0 00-.654 0 .592.592 0 000 .753l3.206 3.675a.424.424 0 00.654 0l6.87-7.937a.59.59 0 000-.753.42.42 0 00-.655 0z\"\r\n      clipRule=\"evenodd\"\r\n    />\r\n  </svg>\r\n);\r\n\r\nexport default memo(SentIcon);\r\n","import React, { memo } from 'react';\r\n\r\nconst AudioWaveIcon = () => {\r\n  return (\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"109\" height=\"30\" fill=\"none\" viewBox=\"0 0 109 30\">\r\n      <path\r\n        fill=\"#fff\"\r\n        fillRule=\"evenodd\"\r\n        d=\"M14 0h-2v30h2V0zM6 7h2v17H6V7zm25 2h-2v12h2V9zM2 11H0v8h2v-8zm57 2h-2v5h2v-5zm-13-2h2v8h-2v-8zm47 0h-2v8h2v-8zm14 0h2v8h-2v-8zM20 7h-2v17h2V7zm15 0h2v17h-2V7zm18 0h-2v17h2V7zm16 0h2v17h-2V7zm18 0h-2v17h2V7zm15 0h2v17h-2V7zM24 0h2v30h-2V0zm19 0h-2v30h2V0zm20 0h2v30h-2V0zm13 0h-2v30h2V0zm4 0h2v30h-2V0zm18 0h-2v30h2V0z\"\r\n        clipRule=\"evenodd\"\r\n      />\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default memo(AudioWaveIcon);\r\n","import React, { memo } from 'react';\r\n\r\nconst PlayIcon = () => {\r\n  return (\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"48\" height=\"48\" viewBox=\"0 0 48 48\">\r\n      <path fill=\"none\" d=\"M-838-2232H562v3600H-838z\" />\r\n      <path d=\"M16 10v28l22-14z\" />\r\n      <path fill=\"none\" d=\"M0 0h48v48H0z\" />\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default memo(PlayIcon);\r\n","import React, { memo } from 'react';\r\n\r\nconst PauseIcon = () => {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"32\"\r\n      height=\"32\"\r\n      version=\"1.1\"\r\n      viewBox=\"0 0 32 32\"\r\n      xmlSpace=\"preserve\"\r\n    >\r\n      <path fill=\"none\" d=\"M0 0H32V32H0z\" />\r\n      <g>\r\n        <path d=\"M20 4H28V28H20z\" />\r\n        <path d=\"M4 4H12V28H4z\" />\r\n      </g>\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default memo(PauseIcon);\r\n","import React, { memo, ReactElement } from 'react';\r\n\r\nimport { ReadIcon, SentIcon } from '../images';\r\n\r\ninterface IMessageReadStatus {\r\n  isMe: boolean;\r\n  isRead: boolean;\r\n  className?: string;\r\n  unreadCount?: number;\r\n}\r\n\r\nconst MessageReadStatus = ({ isMe, isRead, className, unreadCount = 0 }: IMessageReadStatus) => {\r\n  const getIcon = (): ReactElement | number | string | null => {\r\n    if (isRead && isMe) return <ReadIcon />;\r\n    if (isMe) return <SentIcon />;\r\n    if (isRead) return <ReadIcon />;\r\n    return unreadCount ? <>{unreadCount > 9 ? '+9' : unreadCount}</> : null;\r\n  };\r\n\r\n  return <div {...(className ? { className } : {})}>{getIcon()}</div>;\r\n};\r\n\r\nexport default memo(MessageReadStatus);\r\n","import React, { memo, RefObject, useEffect, useRef } from 'react';\r\n\r\nimport { useSelector } from 'react-redux';\r\nimport Scrollbars from 'react-custom-scrollbars-2';\r\nimport { Empty, Spin } from 'antd';\r\n\r\nimport styles from './styles.module.scss';\r\nimport { IDialog } from '../../types/dialog';\r\nimport { DialogueItem } from '..';\r\nimport { isLoadingDialoguesSelector } from '../../store/selectors/dialoguesSelector';\r\n\r\ninterface IDialoguesProps {\r\n  items: IDialog[];\r\n  isShowUnReads: boolean;\r\n}\r\n\r\nconst Dialogues = ({ items, isShowUnReads }: IDialoguesProps) => {\r\n  const ScrollbarsRef = useRef(null) as RefObject<Scrollbars> | null;\r\n  const isLoading = useSelector(isLoadingDialoguesSelector);\r\n\r\n  useEffect(() => {\r\n    if (ScrollbarsRef) {\r\n      ScrollbarsRef.current?.scrollToTop();\r\n    }\r\n  }, [ScrollbarsRef, items, isShowUnReads]);\r\n\r\n  return (\r\n    <Scrollbars ref={ScrollbarsRef} className={styles.dialoguesList} autoHide>\r\n      {isLoading ? (\r\n        <Spin className={styles.loadingContainer} tip=\"Loading dialogues\" />\r\n      ) : !!items.length ? (\r\n        items.map((item) => <DialogueItem key={item._id} {...item} />)\r\n      ) : (\r\n        <Empty image={Empty.PRESENTED_IMAGE_SIMPLE} description=\"No dialogues\" />\r\n      )}\r\n    </Scrollbars>\r\n  );\r\n};\r\n\r\nexport default memo(Dialogues);\r\n","import { IDialog } from '../../types/dialog';\r\nimport { IDialoguesActionTypes } from '../types/dialogues';\r\n\r\nexport const setIsLoadingDialogues = (isLoading: Required<boolean>) => ({\r\n  type: IDialoguesActionTypes.DIALOGUES_SET_IS_LOADING,\r\n  payload: isLoading,\r\n});\r\n\r\nexport const fetchDialogues = () => ({\r\n  type: IDialoguesActionTypes.DIALOGUES_REQUEST,\r\n});\r\n\r\nexport const setDialogues = (dialogues: Required<IDialog[]>) => ({\r\n  type: IDialoguesActionTypes.SET_DIALOGUES,\r\n  payload: dialogues,\r\n});\r\n","import React, { useState, useEffect, useMemo } from 'react';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Badge, Button, Input, Tooltip } from 'antd';\r\nimport { TeamOutlined, FormOutlined, SearchOutlined, UnorderedListOutlined } from '@ant-design/icons';\r\nimport { noop } from 'lodash';\r\n\r\nimport styles from './styles.module.scss';\r\nimport { filterObject, sortObject } from '../../helpers/sortingHelper';\r\nimport { IDialog } from '../../types/dialog';\r\nimport Dialogues from '../Dialogues';\r\nimport { getDialoguesSelector } from '../../store/selectors/dialoguesSelector';\r\nimport { fetchDialogues } from '../../store/actions/dialoguesAction';\r\n\r\nconst DialoguesBar = () => {\r\n  const dispatch = useDispatch();\r\n  const dialogues = useSelector(getDialoguesSelector);\r\n  const [searchValue, setSearchValue] = useState<string>('');\r\n  const [hasUnread, setHasUnread] = useState(false);\r\n  const [isShowUnReads, setIsShowUnReads] = useState<boolean>(false);\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchDialogues());\r\n  }, [dispatch]);\r\n\r\n  const filteredDialogues: IDialog[] = useMemo(\r\n    () =>\r\n      filterObject(\r\n        dialogues,\r\n        (dialog: IDialog) => !dialog.message.isRead && dialog.fullName === dialog.message.user.fullName,\r\n      ),\r\n    [dialogues],\r\n  );\r\n\r\n  const sortedDialogues: IDialog[] = useMemo(() => {\r\n    let unread = false;\r\n    let sorted: IDialog[] = sortObject(\r\n      isShowUnReads ? filteredDialogues : dialogues,\r\n      [(dialog: IDialog) => dialog.message.created_at],\r\n      true,\r\n    );\r\n\r\n    if (searchValue) {\r\n      sorted = filterObject(\r\n        sorted,\r\n        (dialog: IDialog) => dialog.fullName.toLocaleLowerCase().indexOf(searchValue.toLocaleLowerCase()) >= 0,\r\n      );\r\n    }\r\n\r\n    sorted.forEach((dialog) => {\r\n      if (!dialog.message.isRead && dialog.fullName === dialog.message.user.fullName) {\r\n        unread = true;\r\n      }\r\n    });\r\n\r\n    setHasUnread(unread);\r\n    return sorted;\r\n  }, [dialogues, filteredDialogues, isShowUnReads, searchValue]);\r\n\r\n  useEffect(() => {\r\n    if (isShowUnReads && !filteredDialogues.length) {\r\n      setIsShowUnReads(false);\r\n    }\r\n  }, [isShowUnReads, filteredDialogues.length]);\r\n\r\n  return (\r\n    <div className={styles.dialoguesBarContainer}>\r\n      <div className={styles.dialoguesBarTopPart}>\r\n        <div className={styles.dialoguesHeader}>\r\n          <div className={styles.conversationsListText}>\r\n            <TeamOutlined className={styles.listIcon} />\r\n\r\n            <span>List of dialogue</span>\r\n          </div>\r\n\r\n          <Button\r\n            type=\"link\"\r\n            shape=\"circle\"\r\n            className={styles.createNewConversationBtn}\r\n            icon={<FormOutlined className={styles.createNewConversationIcon} />}\r\n            onClick={noop}\r\n          />\r\n        </div>\r\n\r\n        <div className={styles.dialoguesSearchContainer}>\r\n          <Input\r\n            className={styles.searchInput}\r\n            value={searchValue}\r\n            placeholder=\"Search in the contacts\"\r\n            allowClear\r\n            prefix={<SearchOutlined className={styles.searchIcon} />}\r\n            onChange={(e) => setSearchValue(e.target.value)}\r\n          />\r\n\r\n          {((!searchValue && !!filteredDialogues.length) || (searchValue && hasUnread)) && (\r\n            <Badge className={styles.filterBtnContainer} dot={!isShowUnReads}>\r\n              <Tooltip title={isShowUnReads ? 'All messages' : 'Unread messages'} placement=\"top\">\r\n                <div className={styles.filterBtnWrapper} onClick={() => setIsShowUnReads(!isShowUnReads)}>\r\n                  <UnorderedListOutlined />\r\n                </div>\r\n              </Tooltip>\r\n            </Badge>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <Dialogues items={sortedDialogues} isShowUnReads={isShowUnReads} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DialoguesBar;\r\n","import React, { memo } from 'react';\r\n\r\nimport cls from 'classnames';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport styles from './styles.module.scss';\r\nimport { IDialog } from '../../types/dialog';\r\nimport { formatDateDistance } from '../../helpers/dateHelper';\r\nimport { MessageReadStatus } from '..';\r\nimport Avatar from '../Avatar';\r\n\r\ninterface IDialogueItemItemProps extends IDialog {}\r\n\r\nconst DialogueItem = (props: IDialogueItemItemProps) => {\r\n  const {\r\n    _id,\r\n    fullName: name,\r\n    isOnline,\r\n    message: {\r\n      text,\r\n      isRead,\r\n      created_at,\r\n      user: { fullName, avatar },\r\n    },\r\n    unreadCount,\r\n  } = props;\r\n\r\n  const isMe = fullName !== name;\r\n\r\n  return (\r\n    <NavLink to={`/m/${_id}`} className={styles.dialogItemContainer} activeClassName={styles.active}>\r\n      <div className={styles.userAvatarWrapper}>\r\n        <Avatar fullName={name} avatar={avatar || ''} className={styles.userAvatar} />\r\n\r\n        {isOnline && <div className={styles.online} />}\r\n      </div>\r\n\r\n      <div className={styles.dialogContent}>\r\n        <div className={styles.topPart}>\r\n          <div className={styles.userName}>{name}</div>\r\n\r\n          <time className={styles.sentTime}>{formatDateDistance(created_at)}</time>\r\n        </div>\r\n\r\n        <div className={styles.bottomPart}>\r\n          <p className={styles.messageText}>{text}</p>\r\n\r\n          <MessageReadStatus\r\n            className={cls(styles.readIcon, {\r\n              [styles.unread]: !isMe && !isRead,\r\n              [styles.unreadMore]: !isMe && !isRead && unreadCount > 9,\r\n            })}\r\n            isMe={isMe}\r\n            isRead={isRead}\r\n            unreadCount={unreadCount}\r\n          />\r\n        </div>\r\n      </div>\r\n    </NavLink>\r\n  );\r\n};\r\n\r\nexport default memo(DialogueItem);\r\n","import React, { memo } from 'react';\r\n\r\nimport styles from './styles.module.scss';\r\n\r\nconst LoadingMessage = () => (\r\n  <div className={styles.typingAnimationContainer}>\r\n    <span className={styles.one} />\r\n    <span className={styles.two} />\r\n    <span className={styles.three} />\r\n  </div>\r\n);\r\n\r\nexport default memo(LoadingMessage);\r\n","import intervalToDuration from 'date-fns/intervalToDuration';\r\n\r\nconst addZero = (time: number) => `0${time}`.slice(-2);\r\n\r\nexport const getProgress = (duration: number, currentTime: number) => {\r\n  if (currentTime === duration) return 0;\r\n  return (currentTime / duration) * 100;\r\n};\r\n\r\nexport const getTimeDuration = (duration: number, currentTime: number) => {\r\n  let expectedDuration = duration - currentTime;\r\n  if (currentTime === duration) {\r\n    expectedDuration = duration;\r\n  }\r\n  return formatDuration(expectedDuration);\r\n};\r\n\r\nexport const formatDuration = (duration: number) => {\r\n  const interval = { start: new Date(new Date().getTime() - duration * 1000), end: new Date() };\r\n  const { hours, minutes, seconds } = intervalToDuration(interval);\r\n\r\n  const minSec = `${addZero(minutes || 0)}:${addZero(seconds || 0)}`;\r\n  return hours ? `${addZero(hours)}:${minSec}` : minSec;\r\n};\r\n","import React, { memo, RefObject, useCallback, useEffect, useRef, useState } from 'react';\r\n\r\nimport cls from 'classnames';\r\n\r\nimport styles from './styles.module.scss';\r\nimport { AudioWaveIcon, PauseIcon, PlayIcon } from '../images';\r\nimport { getProgress, getTimeDuration } from '../../helpers/audioHelper';\r\n\r\ninterface IAudioMessageProps {\r\n  isMe: boolean;\r\n  audio: string;\r\n}\r\n\r\nconst AudioMessage = ({ isMe, audio }: IAudioMessageProps) => {\r\n  const AudioRef = useRef(null) as RefObject<HTMLAudioElement> | null;\r\n\r\n  const [isPlaying, setIsPlaying] = useState<boolean>(false);\r\n  const [duration, setDuration] = useState<number>(0);\r\n  const [currentTime, setCurrentTime] = useState<number>(0);\r\n\r\n  const handleInitAudioData = () => {\r\n    if (AudioRef?.current) {\r\n      setDuration(AudioRef?.current?.duration);\r\n      setCurrentTime(AudioRef?.current?.currentTime);\r\n    }\r\n  };\r\n\r\n  const handleTimeUpdate = () => {\r\n    if (AudioRef?.current) {\r\n      setCurrentTime(AudioRef?.current?.currentTime);\r\n    }\r\n  };\r\n\r\n  const handlePlay = () => {\r\n    setIsPlaying(true);\r\n    AudioRef?.current?.play();\r\n  };\r\n\r\n  const handlePause = useCallback(() => {\r\n    setIsPlaying(false);\r\n    AudioRef?.current?.pause();\r\n  }, []);\r\n\r\n  const togglePlay = () => {\r\n    isPlaying ? handlePause() : handlePlay();\r\n  };\r\n\r\n  useEffect(() => {\r\n    const audioCurrent = AudioRef?.current;\r\n\r\n    audioCurrent?.addEventListener('loadedmetadata', handleInitAudioData);\r\n    audioCurrent?.addEventListener('timeupdate', handleTimeUpdate);\r\n    audioCurrent?.addEventListener('ended', handlePause);\r\n    return () => {\r\n      audioCurrent?.removeEventListener('loadedmetadata', handleInitAudioData);\r\n      audioCurrent?.removeEventListener('timeupdate', handleTimeUpdate);\r\n      audioCurrent?.removeEventListener('ended', handlePause);\r\n      handlePause();\r\n    };\r\n  }, [handlePause]);\r\n\r\n  return (\r\n    <div className={styles.audioContainer} onClick={togglePlay}>\r\n      <audio ref={AudioRef} src={audio} preload=\"metadata\" />\r\n\r\n      <div className={styles.audioProgress} style={{ width: `${getProgress(duration, currentTime)}%` }} />\r\n\r\n      <div className={cls(styles.audioInfo, { [styles.me]: isMe })}>\r\n        <button className={cls(styles.audioBtn, { [styles.playing]: isPlaying, [styles.paused]: !isPlaying })}>\r\n          {isPlaying ? <PauseIcon /> : <PlayIcon />}\r\n        </button>\r\n\r\n        <div className={styles.progressIcon}>\r\n          <AudioWaveIcon />\r\n        </div>\r\n\r\n        <time className={styles.audioDuration}>{getTimeDuration(duration, currentTime)}</time>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default memo(AudioMessage);\r\n","import React, { memo } from 'react';\r\n\r\nimport cls from 'classnames';\r\n\r\nimport styles from './styles.module.scss';\r\n\r\ninterface IOnlineStatusProps {\r\n  isOnline: boolean;\r\n  className?: string;\r\n  showIcon?: boolean;\r\n}\r\n\r\nconst OnlineStatus = ({ isOnline, className, showIcon }: IOnlineStatusProps) => (\r\n  <div\r\n    className={cls(styles.onlineStatusContainer, className, {\r\n      [styles.online]: showIcon && isOnline,\r\n      [styles.offline]: showIcon && !isOnline,\r\n    })}\r\n  >\r\n    <span className={styles.statusName}>{isOnline ? 'online' : 'offline'}</span>\r\n  </div>\r\n);\r\n\r\nexport default memo(OnlineStatus);\r\n","import React, { ChangeEvent, KeyboardEvent, memo, RefObject, useEffect, useRef, useState } from 'react';\r\n\r\nimport cls from 'classnames';\r\nimport { Button } from 'antd';\r\nimport { AudioOutlined, CameraOutlined, SendOutlined, SmileOutlined } from '@ant-design/icons';\r\nimport Textarea from 'rc-textarea';\r\nimport { isMobile } from 'react-device-detect';\r\nimport Upload from 'rc-upload';\r\nimport { RcFile, UploadProps } from 'rc-upload/lib/interface';\r\nimport { noop } from 'lodash';\r\n\r\nimport styles from './styles.module.scss';\r\n\r\n// const dummyRequest = ({ file, onSuccess }) => {\r\n//   setTimeout(() => {\r\n//     onSuccess('ok');\r\n//   }, 0);\r\n// };\r\n\r\ninterface ISendMessageInputProps {}\r\n\r\nconst SendMessageInput = (props: ISendMessageInputProps) => {\r\n  const [isMount, setIsMount] = useState<boolean>(false);\r\n  const [textValue, setTextValue] = useState<string>('');\r\n  const [files, setFiles] = useState<RcFile[]>([]);\r\n\r\n  const TextareaRef = useRef(null) as RefObject<Textarea> | null;\r\n\r\n  useEffect(() => {\r\n    setIsMount(true);\r\n  }, []);\r\n\r\n  const handleTextChange = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n    setTextValue(e.target.value);\r\n    e.target.scrollTo(0, e.target.scrollHeight);\r\n  };\r\n\r\n  const handlePressEnter = (e: KeyboardEvent<HTMLTextAreaElement>) => {\r\n    if (!isMobile && !e.shiftKey) {\r\n      e.preventDefault();\r\n      // TODO: add functionality for send message when press enter\r\n    }\r\n  };\r\n\r\n  const handleEmojiClick = noop;\r\n  const handleAudioClick = noop;\r\n\r\n  const handleMessageClick = () => {\r\n    // TODO: send message, remove textarea value and focus on it\r\n    TextareaRef?.current?.focus();\r\n  };\r\n\r\n  /**\r\n   * @param file uploader actions start\r\n   */\r\n  const getFiles = (file: RcFile, fileList: RcFile[]) => {\r\n    // console.log('file', file);\r\n    // console.log('fileList', fileList);\r\n\r\n    setFiles(fileList);\r\n    return false;\r\n  };\r\n\r\n  const handleUploadStart = (file: any) => {\r\n    console.log('onStart', file, file.name);\r\n  };\r\n\r\n  const handleUploadSuccess = (ret: any) => {\r\n    console.log('onSuccess', ret);\r\n  };\r\n\r\n  const handleUploadError = (err: any) => {\r\n    console.log('onError', err);\r\n  };\r\n\r\n  const handleUploadAction = (props: UploadProps): Promise<any> => {\r\n    return new Promise((resolve) => {\r\n      setTimeout(() => {\r\n        resolve('/upload.do');\r\n      }, 2000);\r\n    });\r\n  };\r\n  /**\r\n   * @param file uploader actions end\r\n   */\r\n\r\n  return (\r\n    <div className={styles.sendMessageInputContainer}>\r\n      <div className={cls(styles.actionsContainer, styles.leftSide)}>\r\n        <Button\r\n          type=\"link\"\r\n          shape=\"circle\"\r\n          className={cls(styles.btn, styles.emojiBtn)}\r\n          icon={<SmileOutlined className={cls(styles.icon, styles.emojiIcon)} />}\r\n          onClick={handleEmojiClick}\r\n        />\r\n      </div>\r\n\r\n      {isMount && (\r\n        <Textarea\r\n          ref={TextareaRef}\r\n          className={styles.textarea}\r\n          value={textValue}\r\n          placeholder=\"Enter the message...\"\r\n          autoSize={{ minRows: 1, maxRows: 3 }}\r\n          onChange={handleTextChange}\r\n          onPressEnter={handlePressEnter}\r\n          spellCheck\r\n        />\r\n      )}\r\n\r\n      <div className={cls(styles.actionsContainer, styles.rightSide)}>\r\n        <Upload\r\n          multiple\r\n          accept=\"image/*\"\r\n          maxLength={8}\r\n          // openFileDialogOnClick\r\n          // customRequest={(e) => console.log('e request', e)}\r\n          onChange={(e) => console.log('e change', e)}\r\n          onStart={handleUploadStart}\r\n          beforeUpload={getFiles}\r\n          // onSuccess={handleUploadSuccess}\r\n          // onError={handleUploadError}\r\n          // action={dummyRequest}\r\n        >\r\n          <Button\r\n            type=\"link\"\r\n            shape=\"circle\"\r\n            className={cls(styles.btn, styles.photoBtn)}\r\n            icon={<CameraOutlined className={cls(styles.icon, styles.photoIcon)} />}\r\n          />\r\n        </Upload>\r\n\r\n        <div className={styles.conditionContainer}>\r\n          <Button\r\n            type=\"link\"\r\n            shape=\"circle\"\r\n            className={cls(styles.btn, styles.sendBtn, styles.conditionalIcons, { [styles.show]: textValue })}\r\n            icon={<SendOutlined className={cls(styles.icon, styles.sendIcon)} />}\r\n            onClick={handleMessageClick}\r\n          />\r\n\r\n          <Button\r\n            type=\"link\"\r\n            shape=\"circle\"\r\n            className={cls(styles.btn, styles.audioBtn, styles.conditionalIcons, { [styles.show]: !textValue })}\r\n            icon={<AudioOutlined className={cls(styles.icon, styles.audioIcon)} />}\r\n            onClick={handleAudioClick}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default memo(SendMessageInput);\r\n","export const API_URL: string | undefined = process.env.REACT_APP_API_URL;\r\n\r\nexport const ACCESS_TOKEN_KEY: string = 'access_token';\r\nexport const REFRESH_TOKEN_KEY: string = 'refresh_token';\r\n\r\nexport const REGEXP = {\r\n  email:\r\n    /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\r\n  username: /^((?=.*[A-Za-z])|(?=.*[A-Za-z])(?=.*\\d))[A-Za-z\\d_-]{2,30}$/,\r\n  password: /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,30}$/,\r\n};\r\n","import * as yup from 'yup';\r\n\r\nimport { REGEXP } from '../utils/constants';\r\n\r\nexport const LoginSchema = yup.object({\r\n  username: yup\r\n    .string()\r\n    .trim()\r\n    .min(2, 'Username must be at least 2 characters!')\r\n    .max(30, 'Username must be less than 30 characters!')\r\n    .matches(REGEXP.username, 'Incorrect Username!')\r\n    .required('Username is required!'),\r\n\r\n  password: yup\r\n    .string()\r\n    .trim()\r\n    .min(8, 'Password must be at least 8 characters!')\r\n    .max(30, 'Password must be less than 30 characters!')\r\n    .matches(REGEXP.password, 'Incorrect Password!')\r\n    .required('Password is required!'),\r\n});\r\n\r\nexport const RegisterSchema = yup.object({\r\n  username: yup\r\n    .string()\r\n    .trim()\r\n    .min(2, 'Username must be at least 2 characters!')\r\n    .max(30, 'Username must be less than 30 characters!')\r\n    .matches(REGEXP.username, 'Username can contain only letters and numbers, only numbers cannot be!')\r\n    .required('Username is required!'),\r\n\r\n  email: yup.string().email('Enter a valid E-Mail address!').trim().required('E-Mail is required!'),\r\n\r\n  password: yup\r\n    .string()\r\n    .trim()\r\n    .min(8, 'Password must be at least 8 characters!')\r\n    .max(30, 'Password must be less than 30 characters!')\r\n    .matches(\r\n      REGEXP.password,\r\n      'Password must contain lowercase and uppercase letters, numbers and special characters (@$!%*?&)!',\r\n    )\r\n    .required('Password is required!'),\r\n\r\n  confirmPassword: yup\r\n    .string()\r\n    .oneOf([yup.ref('password')], 'The two passwords that you entered do not match!')\r\n    .required('Confirm Password is required!'),\r\n});\r\n","type FieldName = 'email' | 'username' | 'password' | 'confirmPassword';\r\ntype FieldObj = { [name: string]: string | boolean };\r\n\r\nexport const validateFieldStatusHelper = (\r\n  values: FieldObj,\r\n  errors: FieldObj,\r\n  touched: FieldObj,\r\n  fieldName: FieldName,\r\n) => {\r\n  return touched[fieldName] || values[fieldName] ? (errors[fieldName] ? 'error' : 'success') : '';\r\n};\r\n","import React, { memo } from 'react';\r\n\r\nimport cls from 'classnames';\r\nimport Form from 'antd/lib/form';\r\nimport Input from 'antd/lib/input';\r\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\r\nimport { Link, RouteComponentProps } from 'react-router-dom';\r\nimport { useFormik } from 'formik';\r\n\r\nimport styles from '../../styles.module.scss';\r\nimport '../../styles.scss';\r\nimport { Button, ShadowBlock } from '../../../..';\r\nimport { LoginSchema as validationSchema } from '../../../../../validations';\r\nimport { validateFieldStatusHelper } from '../../../../../helpers/validateFieldStatusHelper';\r\nimport { ILoginValues } from '../../../../../types/auth';\r\n\r\ninterface ILoginFormProps extends RouteComponentProps {}\r\n\r\nconst LoginForm = ({ history }: ILoginFormProps) => {\r\n  const formik = useFormik({\r\n    initialValues: { username: '', password: '' },\r\n    onSubmit: (values: ILoginValues) => {\r\n      // TODO: add logic\r\n      console.log('values login', values);\r\n      history.push('/auth/register');\r\n    },\r\n    validationSchema,\r\n    validateOnMount: true,\r\n  });\r\n\r\n  const { values, errors, isValid, dirty, touched, handleSubmit, handleChange, handleBlur } = formik;\r\n\r\n  return (\r\n    <section className={styles.authSectionContainer}>\r\n      <div className={styles.titleContainer}>\r\n        <h1>Login</h1>\r\n        <p>Please, Login to your account</p>\r\n      </div>\r\n\r\n      <ShadowBlock className={styles.block}>\r\n        <Form className=\"authForm\" initialValues={values} onFinish={handleSubmit} requiredMark>\r\n          <Form.Item\r\n            className={styles.fieldWrapper}\r\n            name=\"username\"\r\n            hasFeedback\r\n            help={!touched.username ? null : errors.username}\r\n            validateStatus={validateFieldStatusHelper(values, errors, touched, 'username')}\r\n          >\r\n            <Input\r\n              id=\"username\"\r\n              type=\"text\"\r\n              placeholder=\"Username\"\r\n              size=\"large\"\r\n              className={styles.inputContainer}\r\n              value={values.username}\r\n              onChange={handleChange}\r\n              onBlur={handleBlur}\r\n              prefix={<UserOutlined className={styles.inputIcon} />}\r\n            />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            className={styles.fieldWrapper}\r\n            name=\"password\"\r\n            hasFeedback\r\n            help={!touched.password ? null : errors.password}\r\n            validateStatus={validateFieldStatusHelper(values, errors, touched, 'password')}\r\n          >\r\n            <Input.Password\r\n              id=\"password\"\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n              size=\"large\"\r\n              className={cls(styles.inputContainer, styles.passwordField)}\r\n              value={values.password}\r\n              onChange={handleChange}\r\n              onBlur={handleBlur}\r\n              prefix={<LockOutlined className={styles.inputIcon} />}\r\n            />\r\n          </Form.Item>\r\n\r\n          <Form.Item className={styles.fieldWrapper}>\r\n            <Button\r\n              className={styles.submitBtn}\r\n              type=\"primary\"\r\n              size=\"large\"\r\n              htmlType=\"submit\"\r\n              disabled={!(isValid && dirty)}\r\n            >\r\n              Login\r\n            </Button>\r\n\r\n            <Link to=\"/auth/register\" className={styles.suggestLink}>\r\n              Register\r\n            </Link>\r\n          </Form.Item>\r\n        </Form>\r\n      </ShadowBlock>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default memo(LoginForm);\r\n","import React from 'react';\r\n\r\nimport cls from 'classnames';\r\nimport Form from 'antd/lib/form';\r\nimport Input from 'antd/lib/input';\r\nimport { UserOutlined, LockOutlined, MailOutlined } from '@ant-design/icons';\r\nimport { Link, RouteComponentProps } from 'react-router-dom';\r\nimport { useFormik } from 'formik';\r\n\r\nimport styles from '../../styles.module.scss';\r\nimport '../../styles.scss';\r\nimport { Button, ShadowBlock } from '../../../..';\r\nimport { RegisterSchema as validationSchema } from '../../../../../validations';\r\nimport { validateFieldStatusHelper } from '../../../../../helpers/validateFieldStatusHelper';\r\nimport { IRegisterValues } from '../../../../../types/auth';\r\n\r\ninterface IRegisterFormProps extends RouteComponentProps {}\r\n\r\nconst RegisterForm = ({ history }: IRegisterFormProps) => {\r\n  const formik = useFormik({\r\n    initialValues: { email: '', username: '', password: '', confirmPassword: '' },\r\n    onSubmit: (values: IRegisterValues) => {\r\n      // TODO: add logic\r\n      console.log('values register', values);\r\n      history.push('/auth/register/success');\r\n    },\r\n    validationSchema,\r\n    validateOnMount: true,\r\n  });\r\n\r\n  const { values, errors, isValid, dirty, touched, handleSubmit, handleChange, handleBlur } = formik;\r\n\r\n  return (\r\n    <section className={styles.authSectionContainer}>\r\n      <div className={styles.titleContainer}>\r\n        <h1>Register</h1>\r\n        <p>To enter the chat, you need to register</p>\r\n      </div>\r\n\r\n      <ShadowBlock className={styles.block}>\r\n        <Form className=\"authForm\" initialValues={{ remember: true }} onFinish={handleSubmit} requiredMark>\r\n          <Form.Item\r\n            className={styles.fieldWrapper}\r\n            name=\"email\"\r\n            hasFeedback\r\n            help={!touched.email ? null : errors.email}\r\n            validateStatus={validateFieldStatusHelper(values, errors, touched, 'email')}\r\n          >\r\n            <Input\r\n              className={styles.inputContainer}\r\n              type=\"email\"\r\n              placeholder=\"E-Mail\"\r\n              size=\"large\"\r\n              prefix={<MailOutlined className={styles.inputIcon} />}\r\n              value={values.email}\r\n              onChange={handleChange}\r\n              onBlur={handleBlur}\r\n            />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            className={styles.fieldWrapper}\r\n            name=\"username\"\r\n            hasFeedback\r\n            help={!touched.username ? null : errors.username}\r\n            validateStatus={validateFieldStatusHelper(values, errors, touched, 'username')}\r\n          >\r\n            <Input\r\n              className={styles.inputContainer}\r\n              placeholder=\"Username\"\r\n              size=\"large\"\r\n              prefix={<UserOutlined className={styles.inputIcon} />}\r\n              value={values.username}\r\n              onChange={handleChange}\r\n              onBlur={handleBlur}\r\n            />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            className={styles.fieldWrapper}\r\n            name=\"password\"\r\n            hasFeedback\r\n            help={!touched.password ? null : errors.password}\r\n            validateStatus={validateFieldStatusHelper(values, errors, touched, 'password')}\r\n          >\r\n            <Input.Password\r\n              autoComplete=\"new-password\"\r\n              className={cls(styles.inputContainer, styles.passwordField)}\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n              size=\"large\"\r\n              prefix={<LockOutlined className={styles.inputIcon} />}\r\n              value={values.password}\r\n              onChange={handleChange}\r\n              onBlur={handleBlur}\r\n            />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            className={styles.fieldWrapper}\r\n            name=\"confirmPassword\"\r\n            hasFeedback\r\n            help={!touched.confirmPassword ? null : errors.confirmPassword}\r\n            validateStatus={validateFieldStatusHelper(values, errors, touched, 'confirmPassword')}\r\n          >\r\n            <Input.Password\r\n              className={cls(styles.inputContainer, styles.passwordField)}\r\n              type=\"password\"\r\n              placeholder=\"Confirm Password\"\r\n              size=\"large\"\r\n              prefix={<LockOutlined className={styles.inputIcon} />}\r\n              value={values.confirmPassword}\r\n              onChange={handleChange}\r\n              onBlur={handleBlur}\r\n            />\r\n          </Form.Item>\r\n\r\n          <Form.Item className={styles.fieldWrapper}>\r\n            <Button\r\n              className={styles.submitBtn}\r\n              type=\"primary\"\r\n              size=\"large\"\r\n              htmlType=\"submit\"\r\n              disabled={!(isValid && dirty)}\r\n            >\r\n              Register\r\n            </Button>\r\n\r\n            <Link to=\"/auth/login\" className={styles.suggestLink}>\r\n              Login to your account\r\n            </Link>\r\n          </Form.Item>\r\n        </Form>\r\n      </ShadowBlock>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default RegisterForm;\r\n","import React from 'react';\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport { InfoCircleTwoTone } from '@ant-design/icons';\r\n\r\nimport styles from '../../styles.module.scss';\r\nimport { ShadowBlock } from '../../../..';\r\n\r\nconst RegisterSuccess = () => {\r\n  return (\r\n    <section className={styles.authSectionContainer}>\r\n      <div className={styles.titleContainer}>\r\n        <h1>Register</h1>\r\n        <p>To enter the chat, you need to register</p>\r\n      </div>\r\n\r\n      <ShadowBlock className={styles.block}>\r\n        <div className={styles.successContainer}>\r\n          <InfoCircleTwoTone className={styles.infoIcon} />\r\n\r\n          <h2>Verify your account</h2>\r\n\r\n          <p>An email has been sent to your email with a link to confirm your account.</p>\r\n\r\n          <Link to=\"/auth/login\">Go to Login page</Link>\r\n        </div>\r\n      </ShadowBlock>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default RegisterSuccess;\r\n","import React, { memo } from 'react';\r\n\r\nimport { Redirect, Route, Switch } from 'react-router';\r\n\r\nimport styles from './styles.module.scss';\r\nimport { LoginForm, RegisterForm, Success } from './components';\r\n\r\nconst Auth = () => (\r\n  <div className={styles.authContainer}>\r\n    <Switch>\r\n      <Route path=\"/auth\" exact component={LoginForm} />\r\n\r\n      <Route path=\"/auth/register\" exact component={RegisterForm} />\r\n\r\n      <Route path=\"/auth/register/success\" exact component={Success} />\r\n\r\n      <Redirect to=\"/\" />\r\n    </Switch>\r\n  </div>\r\n);\r\n\r\nexport default memo(Auth);\r\n","import React from 'react';\r\n\r\nimport styles from './styles.module.scss';\r\nimport { DialoguesBar, ConversationsPart } from '../..';\r\n\r\nconst Home = () => {\r\n  return (\r\n    <div className={styles.homePage}>\r\n      <div className={styles.container}>\r\n        <DialoguesBar />\r\n\r\n        <ConversationsPart />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from 'react';\r\n\r\nimport { Redirect, Route, Switch } from 'react-router';\r\n\r\nimport { PageLayout } from './components';\r\nimport { Home, Auth } from './components/pages';\r\n\r\nconst App = () => (\r\n  <PageLayout>\r\n    <Switch>\r\n      {/* TODO: add home landing page */}\r\n      <Route path=\"/\" exact component={Home} />\r\n\r\n      <Route path=\"/m\" exact component={Home} />\r\n\r\n      <Route path=\"/m/:id\" component={Home} exact />\r\n\r\n      <Route path=\"/auth\" component={Auth} />\r\n\r\n      <Redirect to=\"/\" />\r\n    </Switch>\r\n  </PageLayout>\r\n);\r\n\r\nexport default App;\r\n","import { createBrowserHistory } from 'history';\r\n\r\nexport default createBrowserHistory();\r\n","import { IDialoguesState, IDialoguesActions, IDialoguesActionTypes } from '../types/dialogues';\r\n\r\nconst initialState: IDialoguesState = {\r\n  isLoading: false,\r\n  dialogues: [],\r\n};\r\n\r\nconst dialoguesReducer = (state: IDialoguesState = initialState, action: IDialoguesActions) => {\r\n  switch (action.type) {\r\n    case IDialoguesActionTypes.DIALOGUES_SET_IS_LOADING:\r\n      return { ...state, isLoading: action.payload };\r\n\r\n    case IDialoguesActionTypes.SET_DIALOGUES:\r\n      return { ...state, dialogues: action.payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default dialoguesReducer;\r\n","import { IMessagesState, IMessagesActions, IMessagesActionTypes } from '../types/messages';\r\n\r\nconst initialState: IMessagesState = {\r\n  isLoading: false,\r\n  messages: [],\r\n};\r\n\r\nconst messagesReducer = (state: IMessagesState = initialState, action: IMessagesActions) => {\r\n  switch (action.type) {\r\n    case IMessagesActionTypes.MESSAGES_SET_IS_LOADING:\r\n      return { ...state, isLoading: action.payload };\r\n\r\n    case IMessagesActionTypes.SET_MESSAGES:\r\n      return { ...state, messages: action.payload };\r\n\r\n    case IMessagesActionTypes.REMOVE_MESSAGES:\r\n      return { ...state, messages: [] };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default messagesReducer;\r\n","import { combineReducers } from 'redux';\r\n\r\nimport dialoguesData from './dialoguesReducer';\r\nimport messagesData from './messagesReducer';\r\n\r\nconst rootReducers = combineReducers({\r\n  dialoguesData,\r\n  messagesData,\r\n});\r\n\r\nexport default rootReducers;\r\n","class StorageManager {\r\n  static setItem = (key: Required<string>, data: any) => {\r\n    try {\r\n      const serializedState = JSON.stringify(data);\r\n      localStorage.setItem(key, serializedState);\r\n    } catch {\r\n      // ignore write errors\r\n    }\r\n  };\r\n\r\n  static getItem = (key: Required<string>) => {\r\n    try {\r\n      const serializedState = localStorage.getItem(key);\r\n      if (serializedState === null) {\r\n        return;\r\n      }\r\n      return JSON.parse(serializedState);\r\n    } catch (err) {\r\n      // ignore write errors\r\n    }\r\n  };\r\n\r\n  static removeItem = (key: Required<string>) => {\r\n    localStorage.removeItem(key);\r\n  };\r\n}\r\n\r\nexport default StorageManager;\r\n","import StorageManager from '../StorageManager';\r\nimport { ACCESS_TOKEN_KEY } from '../constants';\r\n\r\nconst getAccessToken = (): string | null => {\r\n  const token = StorageManager.getItem(ACCESS_TOKEN_KEY);\r\n  return token || null;\r\n};\r\n\r\nexport default getAccessToken;\r\n","import axios from 'axios';\r\n\r\nimport { API_URL } from '../utils/constants';\r\nimport getAccessToken from '../utils/AccessToken';\r\n\r\nconst api = axios.create({\r\n  baseURL: API_URL,\r\n  // withCredentials: true,\r\n  headers: {\r\n    Authorization: `Bearer ${getAccessToken()}`,\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\nexport default api;\r\n","import axios from '../../axios';\r\n\r\nconst getAll = () => axios.get('/dialogues');\r\n\r\nconst dialoguesApi = { getAll };\r\n\r\nexport default dialoguesApi;\r\n","import { takeLatest, put, call } from 'redux-saga/effects';\r\n\r\nimport dialoguesApi from '../../utils/api/dialoguesApi';\r\nimport { setDialogues, setIsLoadingDialogues } from '../actions/dialoguesAction';\r\nimport { IDialoguesActionTypes } from '../types/dialogues';\r\n\r\nfunction* getAllDialogues() {\r\n  try {\r\n    yield put(setIsLoadingDialogues(true));\r\n    const { data } = yield call(dialoguesApi.getAll);\r\n    yield put(setDialogues(data));\r\n    yield put(setIsLoadingDialogues(false));\r\n  } catch (error) {\r\n    yield put(setIsLoadingDialogues(false));\r\n    console.log('error', error.message);\r\n  }\r\n}\r\n\r\nexport default function* dialoguesSagaWatcher() {\r\n  yield takeLatest(IDialoguesActionTypes.DIALOGUES_REQUEST, getAllDialogues);\r\n}\r\n","import axios from '../../axios';\r\n\r\nconst getAllByDialogueId = (dialogueId: string) => axios.get(`/messages/${dialogueId}`);\r\n\r\nconst messagesApi = { getAllByDialogueId };\r\n\r\nexport default messagesApi;\r\n","import { takeLatest, put } from 'redux-saga/effects';\r\n\r\nimport messagesApi from '../../utils/api/messagesApi';\r\nimport { setIsLoadingMessages, setMessages } from '../actions/messagesAction';\r\nimport { IMessagesActionTypes, IGetMessagesAction } from '../types/messages';\r\n\r\nfunction* getAllMessagesByDialogueId({ payload }: IGetMessagesAction) {\r\n  try {\r\n    yield put(setIsLoadingMessages(true));\r\n    const { data } = yield messagesApi.getAllByDialogueId(payload);\r\n    yield put(setMessages(data));\r\n    yield put(setIsLoadingMessages(false));\r\n  } catch (error) {\r\n    yield put(setIsLoadingMessages(false));\r\n    console.log('error', error.message);\r\n  }\r\n}\r\n\r\nexport default function* messagesSagaWatcher() {\r\n  yield takeLatest(IMessagesActionTypes.MESSAGES_REQUEST, getAllMessagesByDialogueId);\r\n}\r\n","import { all } from 'redux-saga/effects';\r\n\r\nimport dialoguesSagaWatcher from './dialoguesSaga';\r\nimport messagesSagaWatcher from './messagesSaga';\r\n\r\nexport default function* rootSagas() {\r\n  yield all([dialoguesSagaWatcher(), messagesSagaWatcher()]);\r\n}\r\n","import { createStore, applyMiddleware, Middleware, Dispatch, AnyAction } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport logger from 'redux-logger';\r\n\r\nimport rootReducers from './reducers';\r\nimport rootSagas from './sagas';\r\n\r\nconst environment = process.env.NODE_ENV || 'development';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst middlewaresArr: Middleware<{}, any, Dispatch<AnyAction>>[] = [sagaMiddleware];\r\n\r\nif (environment === 'development') {\r\n  middlewaresArr.push(logger);\r\n}\r\n\r\nconst middlewares = applyMiddleware(...middlewaresArr);\r\n\r\nlet store = createStore(rootReducers, middlewares);\r\n\r\nif (environment === 'development') {\r\n  store = createStore(rootReducers, composeWithDevTools(middlewares));\r\n}\r\n\r\nsagaMiddleware.run(rootSagas);\r\n\r\nexport default store;\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppDispatch = typeof store.dispatch;\r\n","import React from 'react';\r\n\r\nimport ReactDOM from 'react-dom';\r\nimport { Router } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport './scss/index.scss';\r\nimport App from './App';\r\nimport history from './history';\r\nimport store from './store';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Router history={history}>\r\n      <Provider store={store}>\r\n        <App />\r\n      </Provider>\r\n    </Router>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialoguesBarContainer\":\"styles_dialoguesBarContainer__FWzgS\",\"dialoguesBarTopPart\":\"styles_dialoguesBarTopPart__JAobW\",\"dialoguesHeader\":\"styles_dialoguesHeader__3JOmL\",\"conversationsListText\":\"styles_conversationsListText__239nz\",\"listIcon\":\"styles_listIcon__26yUq\",\"createNewConversationBtn\":\"styles_createNewConversationBtn__1pRIm\",\"createNewConversationIcon\":\"styles_createNewConversationIcon__22qUA\",\"dialoguesSearchContainer\":\"styles_dialoguesSearchContainer__3m05x\",\"searchInput\":\"styles_searchInput__QNzEH\",\"searchIcon\":\"styles_searchIcon__2UIlJ\",\"filterBtnContainer\":\"styles_filterBtnContainer__17ZoC\",\"filterBtnWrapper\":\"styles_filterBtnWrapper__3lrwD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"audioContainer\":\"styles_audioContainer__16mwG\",\"audioProgress\":\"styles_audioProgress__qcC7R\",\"audioInfo\":\"styles_audioInfo__MYo-s\",\"me\":\"styles_me__10kyk\",\"audioBtn\":\"styles_audioBtn__1htpv\",\"paused\":\"styles_paused__1g3If\",\"playing\":\"styles_playing__3CJDg\",\"progressIcon\":\"styles_progressIcon__3bJH_\",\"audioDuration\":\"styles_audioDuration__1edLI\"};"],"sourceRoot":""}